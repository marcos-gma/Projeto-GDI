-- ENDEREÇO COM VARRAY
CREATE OR REPLACE TYPE TELEFONES_VARRAY AS VARRAY(3) OF VARCHAR2(15);
/

CREATE OR REPLACE TYPE TP_ENDERECO AS OBJECT (
    CEP VARCHAR2(8),
    RUA VARCHAR2(30),
    NUMERO NUMBER,
    BAIRRO VARCHAR2(20),
    TELEFONES TELEFONES_VARRAY, -- Adicionando um VARRAY de telefones

    CONSTRUCTOR FUNCTION TP_ENDERECO(SELF IN OUT NOCOPY TP_ENDERECO, CEP VARCHAR2, RUA VARCHAR2, NUMERO NUMBER, BAIRRO VARCHAR2, TELEFONES TELEFONES_VARRAY) RETURN SELF AS RESULT
);
/

CREATE OR REPLACE TYPE BODY TP_ENDERECO AS
    CONSTRUCTOR FUNCTION TP_ENDERECO(SELF IN OUT TP_ENDERECO, CEP VARCHAR2, RUA VARCHAR2, NUMERO NUMBER, BAIRRO VARCHAR2, TELEFONES TELEFONES_VARRAY) RETURN SELF AS RESULT IS
        BEGIN
            SELF.CEP := CEP;
            SELF.RUA := RUA;
            SELF.NUMERO := NUMERO;
            SELF.BAIRRO := BAIRRO;
            SELF.TELEFONES := TELEFONES;
            RETURN SELF;
        END;
END;
/

-- FUNCIONÁRIO COM NESTED TABLE E ORDER MEMBER FUNCTION
CREATE OR REPLACE TYPE TELEFONES_NESTED AS TABLE OF VARCHAR2(15);
/

CREATE OR REPLACE TYPE TP_FUNCIONARIO AS OBJECT (
    CPF VARCHAR2(11),
    NOME VARCHAR2(50),
    DATA_NASC DATE,
    SEXO CHAR(1),
    DATA_ADM DATE,
    ENDERECO TP_ENDERECO,
    SALARIO NUMBER,
    TELEFONES TELEFONES_NESTED, -- Adicionando uma nested table de telefones

    -- Definindo uma ORDER MEMBER FUNCTION para comparação
    ORDER MEMBER FUNCTION compare_to(SELF IN TP_FUNCIONARIO, outro TP_FUNCIONARIO) RETURN INTEGER,

    CONSTRUCTOR FUNCTION TP_FUNCIONARIO(SELF IN OUT NOCOPY TP_FUNCIONARIO, CPF VARCHAR2, NOME VARCHAR2, DATA_NASC DATE, SEXO CHAR, DATA_ADM DATE, ENDERECO TP_ENDERECO, SALARIO NUMBER) RETURN SELF AS RESULT
) NOT FINAL NOT INSTANTIABLE;
/

CREATE OR REPLACE TYPE BODY TP_FUNCIONARIO AS
    -- Implementação do construtor
    CONSTRUCTOR FUNCTION TP_FUNCIONARIO(SELF IN OUT TP_FUNCIONARIO, CPF VARCHAR2, NOME VARCHAR2, DATA_NASC DATE, SEXO CHAR, DATA_ADM DATE, ENDERECO TP_ENDERECO, SALARIO NUMBER) RETURN SELF AS RESULT IS
    BEGIN
        SELF.CPF := CPF;
        SELF.NOME := NOME;
        SELF.DATA_NASC := DATA_NASC;
        SELF.SEXO := SEXO;
        SELF.DATA_ADM := DATA_ADM;
        SELF.ENDERECO := ENDERECO;
        SELF.SALARIO := SALARIO;
        RETURN SELF;
    END;

    -- Implementação da ORDER MEMBER FUNCTION
    ORDER MEMBER FUNCTION compare_to(SELF IN TP_FUNCIONARIO, outro TP_FUNCIONARIO) RETURN INTEGER IS
    BEGIN
        IF SELF.SALARIO > outro.SALARIO THEN
            RETURN 1;
        ELSIF SELF.SALARIO < outro.SALARIO THEN
            RETURN -1;
        ELSE
            RETURN 0;
        END IF;
    END;
END;
/

-- DIRETOR COM OVERRIDING E FINAL MEMBER
CREATE OR REPLACE TYPE TP_DIRETOR UNDER TP_FUNCIONARIO (
    DATA_INICIO DATE,

    -- Sobrescrevendo a função de comparação
    OVERRIDING MEMBER FUNCTION compare_to(SELF IN TP_DIRETOR, outro TP_FUNCIONARIO) RETURN INTEGER,

    FINAL MEMBER FUNCTION obter_diretor_info RETURN VARCHAR2 -- Função final, não pode ser sobrescrita
);
/

CREATE OR REPLACE TYPE BODY TP_DIRETOR AS
    -- Implementação da função de comparação
    OVERRIDING MEMBER FUNCTION compare_to(SELF IN TP_DIRETOR, outro TP_FUNCIONARIO) RETURN INTEGER IS
    BEGIN
        RETURN SELF.DATA_INICIO - outro.DATA_ADM;
    END;

    -- Implementação da função final
    FINAL MEMBER FUNCTION obter_diretor_info RETURN VARCHAR2 IS
    BEGIN
        RETURN 'Diretor: ' || SELF.NOME || ', Data de Início: ' || TO_CHAR(SELF.DATA_INICIO, 'DD-MM-YYYY');
    END;
END;
/

-- GUARDA COM MAP FUNCTION
CREATE OR REPLACE TYPE TP_GUARDA UNDER TP_FUNCIONARIO (
    TURNO VARCHAR2(5),
    SUPERVISOR REF TP_GUARDA,

    MAP MEMBER FUNCTION map_salario RETURN NUMBER -- Map para converter salário em número para ordenação
);
/

CREATE OR REPLACE TYPE BODY TP_GUARDA AS
    -- Implementação da MAP FUNCTION
    MAP MEMBER FUNCTION map_salario RETURN NUMBER IS
    BEGIN
        RETURN SELF.SALARIO;
    END;
END;
/

-- TABELA BASEADA NO TIPO
CREATE TABLE OF TP_FUNCIONARIO WITH ROWID;
/

-- ALA COM VARRAY E NESTED TABLE
CREATE OR REPLACE TYPE LISTA_DE_CELAS AS VARRAY(100) OF NUMBER;
/

CREATE OR REPLACE TYPE TP_ALA AS OBJECT (
    ID NUMBER,
    TIPO VARCHAR2(10),
    CAPACIDADE NUMBER,
    CELAS LISTA_DE_CELAS, -- VARRAY para armazenar celas

    CONSTRUCTOR FUNCTION TP_ALA(SELF IN OUT NOCOPY TP_ALA, ID NUMBER, TIPO VARCHAR2, CAPACIDADE NUMBER, CELAS LISTA_DE_CELAS) RETURN SELF AS RESULT
);
/

CREATE OR REPLACE TYPE BODY TP_ALA AS
    -- Implementação do construtor
    CONSTRUCTOR FUNCTION TP_ALA(SELF IN OUT TP_ALA, ID NUMBER, TIPO VARCHAR2, CAPACIDADE NUMBER, CELAS LISTA_DE_CELAS) RETURN SELF AS RESULT IS
    BEGIN
        SELF.ID := ID;
        SELF.TIPO := TIPO;
        SELF.CAPACIDADE := CAPACIDADE;
        SELF.CELAS := CELAS;
        RETURN SELF;
    END;
END;
/

-- ALTERANDO UM TIPO EXISTENTE
ALTER TYPE TP_FUNCIONARIO ADD ATTRIBUTE (CARGO VARCHAR2(50));
/

-- DETENTO UTILIZANDO REF E SCOPE IS
CREATE OR REPLACE TYPE TP_DETENTO AS OBJECT (
    CPF VARCHAR2(11),
    NOME VARCHAR2(30),
    DATA_NASC DATE,
    SEXO CHAR(1),
    DATA_ENT DATE,
    COMPORTAMENTO VARCHAR2(30),

    CONSTRUCTOR FUNCTION TP_DETENTO(SELF IN OUT NOCOPY TP_DETENTO, CPF VARCHAR2, NOME VARCHAR2, DATA_NASC DATE, SEXO CHAR, DATA_ENT DATE, COMPORTAMENTO VARCHAR2) RETURN SELF AS RESULT
);
/

CREATE TABLE DETENTO_TABLE OF TP_DETENTO
   (PRIMARY KEY (CPF))
   OBJECT IDENTIFIER IS PRIMARY KEY;
/

-- VISITA COM REFERÊNCIAS E SCOPE IS
CREATE OR REPLACE TYPE TP_VISITA AS OBJECT (
    DETENTO REF TP_DETENTO,
    MOTIVO_VISITA VARCHAR2(20),
    DATA_HORA DATE,

    CONSTRUCTOR FUNCTION TP_VISITA(SELF IN OUT NOCOPY TP_VISITA, DETENTO REF TP_DETENTO, MOTIVO_VISITA VARCHAR2, DATA_HORA DATE) RETURN SELF AS RESULT
);
/

CREATE TABLE VISITAS OF TP_VISITA;

CREATE TABLE ALA_REF_TABLE OF TP_ALA
   (PRIMARY KEY (ID))
   OBJECT IDENTIFIER IS PRIMARY KEY;
/

-- Possui (com referenciamento)
CREATE OR REPLACE TYPE TP_POSSUI AS OBJECT (
    DETENTO REF TP_DETENTO,
    ALA REF TP_ALA,
    CELA REF TP_CELA,

    CONSTRUCTOR FUNCTION TP_POSSUI(SELF IN OUT NOCOPY TP_POSSUI, DETENTO REF TP_DETENTO, ALA REF TP_ALA, CELA REF TP_CELA) RETURN SELF AS RESULT
);
/

CREATE OR REPLACE TYPE BODY TP_POSSUI AS
    -- Implementação do construtor
    CONSTRUCTOR FUNCTION TP_POSSUI(SELF IN OUT TP_POSSUI, DETENTO REF TP_DETENTO, ALA REF TP_ALA, CELA REF TP_CELA) RETURN SELF AS RESULT IS
    BEGIN
        SELF.DETENTO := DETENTO;
        SELF.ALA := ALA;
        SELF.CELA := CELA;
        RETURN SELF;
    END;
END;
/
